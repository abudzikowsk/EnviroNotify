@model List<EnviroNotify.Dashboard.Models.IndexViewModel>

@{
    Layout = "_Layout";
}
<div class="chart-container">
  <div class="chart-box">
    <canvas id="humidity-chart"></canvas>
  </div>

  <div class="chart-box">
    <canvas id="temperature-chart"></canvas>
  </div>
</div>

@section Scripts
{
    <script>
      const humidityCtx = document.getElementById('humidity-chart');
      const humidityLabels = @Html.Raw(Json.Serialize(Model.Select(x => x.DateTime.ToString("g")).ToList()));
      const humidityData = {
        labels: humidityLabels,
        datasets: [{
          label: 'Humidity',
          data: @Html.Raw(Json.Serialize(Model.Select(x => x.Humidity).ToList())),
          backgroundColor: 'rgb(99,151,255)',
          borderColor: 'rgb(99,151,255)',
          borderWidth: 1
        }]
      };
    
      new Chart(humidityCtx, {
        type: 'line',
        data: humidityData,
        options: {
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });
      
            const temperatureCtx = document.getElementById('temperature-chart');
            const temperatureLabels = @Html.Raw(Json.Serialize(Model.Select(x => x.DateTime.ToString("g")).ToList()));
            const temperatureData = {
              labels: temperatureLabels,
              datasets: [{
                label: 'Temperature',
                data: @Html.Raw(Json.Serialize(Model.Select(x => x.Temperature).ToList())),
                backgroundColor: 'rgb(8,154,45)',
                borderColor: 'rgb(8,154,45)',
                borderWidth: 1
              }]
            };
          
            new Chart(temperatureCtx, {
              type: 'line',
              data: temperatureData,
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                }
              }
            });
    </script>
}
